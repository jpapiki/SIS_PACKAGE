<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/10/2019 11:53:01 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="JDGITSERVICES1"
  DTS:CreatorName="JDG\842793"
  DTS:DTSID="{4D2D4155-F66F-44C7-A646-BE8F50D04412}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.7462.6"
  DTS:LocaleID="7177"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="23"
  DTS:VersionGUID="{5401B897-A56B-4A23-862E-40ED6362D821}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Connector]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{9C15C1E7-E394-4744-B7A6-62B92DB9D50B}"
      DTS:ObjectName="Connector">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;User ID=update;Initial Catalog=VehicleManagementSystem;Application Name=SSIS-Package-{9C15C1E7-E394-4744-B7A6-62B92DB9D50B}LocalHost.VehicleManagementSystem.update;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAyjRpO19riE6U4kOhfqh11AAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACvBy9DUMjcmWWRrLx0WFtcAAAAAASAAACgAAAAEAAAAEZI+ShmgahT0vRvIn9y6wMYAAAAQ2v6LfJWDlsJJ5LQnT3trURq5SOF/iC0FAAAAAky24S+qHlW5cO1J5IyfCGyNZLO</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{B5C8E3B1-E2BF-4EC8-BAD8-6F9ED127DC85}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{D36AE180-DC14-40C8-B8E8-071D267A7462}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_28f4502b8ba844388386f3c34e9271da"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_28f4502b8ba844388386f3c34e9271da.Properties.Settings.get_Default():ST_28f4502b8ba844388386f3c34e9271da.Properties.Sett" +
    "ings")]

namespace ST_28f4502b8ba844388386f3c34e9271da.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Net.Mail;
#endregion

namespace ST_28f4502b8ba844388386f3c34e9271da
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        /// 
             //Declare and initilize variables
        SqlConnection conn;
        SqlCommand comm;
       

		public void Main()
		{
			// TODO: Add your code here
            try
            {
          
                DataSet ds = new DataSet();
                conn = (SqlConnection)Dts.Connections["Connector"].AcquireConnection(null);
                using (SqlConnection con = conn)
                {
                    SqlCommand sqlComm = new SqlCommand("sp_weekly_inspection", con);
            

                    sqlComm.CommandType = CommandType.StoredProcedure;

                    SqlDataAdapter da = new SqlDataAdapter();
                    da.SelectCommand = sqlComm;

                    da.Fill(ds);
                    //sp_mail_weeklyinspection

                    foreach (DataTable table in ds.Tables)
                    {
                        int i = 0;
                        foreach (DataRow dr in table.Rows)
                        {
                            var day = System.DateTime.Now.ToString("dddd");
                            var status = ds.Tables[0].Rows[0]["inspStatus"].ToString();
                           if (day == "Monday" || day == "Sunday")
                            {
                           //set all status to due
                          setinspection("ALL","Inspection Due4");
                          var regID = ds.Tables[0].Rows[i]["VehicleID"].ToString();
                          var fullname =  ds.Tables[0].Rows[i]["displayName"].ToString();
                          var Email = "johannest@jdg.co.za;waynebe@jdg.co.za";
                              // ds.Tables[0].Rows[i]["Email"].ToString();
                          var Subject = "Car Inspection Due";
                          sendmail(regID, Subject, fullname, Email);
                  

                            }
                            else if (day != "Monday" || day != "Sunday" || day != "Saturday" && status != "Complete") {
                                var regID = ds.Tables[0].Rows[i]["VehicleID"].ToString();
                                setinspection(regID, "Inspection Missed");
                              
                                var fullname = ds.Tables[0].Rows[i]["displayName"].ToString();
                                //var Email = ds.Tables[0].Rows[i]["Email"].ToString();
                                var Email = "johannest@jdg.co.za;waynebe@jdg.co.za";
                                var Subject = "Car Inspection Missed";
                                sendmail(regID, Subject, fullname, Email);

                            
                            }


                           i++;
                         
                        }
                    }
                }




                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
			//Dts.TaskResult = (int)ScriptResults.Success;
		}

        void setinspection(string vehicleID,string status){
        
                 DataSet ds = new DataSet();
                conn = (SqlConnection)Dts.Connections["Connector"].AcquireConnection(null);
                using (SqlConnection con = conn)
                {
                    SqlCommand sqlComm = new SqlCommand("sp_weekly_inspection_set", con);


                    sqlComm.CommandType = CommandType.StoredProcedure;
                    sqlComm.Parameters.AddWithValue("@Status", status);
                    sqlComm.Parameters.AddWithValue("@vehicleID", vehicleID);
                  
                    sqlComm.ExecuteNonQuery();
                   
             
                }
        }

        void sendmail(string vehicleID,string Subject,string fullname,string To)
        {
            try
            {
                conn = (SqlConnection)Dts.Connections["Connector"].AcquireConnection(null);
                using (SqlConnection con = conn)
                {
                    SqlCommand sqlComm = new SqlCommand("sp_mail_weeklyinspection", con);
                    sqlComm.CommandType = CommandType.StoredProcedure;
                    sqlComm.Parameters.AddWithValue("@User2", To);
                    sqlComm.Parameters.AddWithValue("@FullName", fullname);
                    sqlComm.Parameters.AddWithValue("@RegNumber", vehicleID);
                    sqlComm.Parameters.AddWithValue("@Subj2", Subject);
                    sqlComm.ExecuteNonQuery();
                }
            }catch(Exception ex){

                Dts.TaskResult = (int)ScriptResults.Failure;
            }

        

        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

         

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_28f4502b8ba844388386f3c34e9271da.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0F27DDF6-954F-4C9D-B473-7062240B366C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_28f4502b8ba844388386f3c34e9271da</RootNamespace>
    <AssemblyName>ST_28f4502b8ba844388386f3c34e9271da</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_28f4502b8ba844388386f3c34e9271da</msb:CodeName>
		<msb:DisplayName>ST_28f4502b8ba844388386f3c34e9271da</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{40B71173-54C5-486C-B464-A0AD4DD7CD17}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_28f4502b8ba844388386f3c34e9271da.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="6a1bc9ece03d4be0828f95b3c131e8d5">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:LineNumber>100</msb:LineNumber>
			<msb:HitCountTarget>1</msb:HitCountTarget>
			<msb:ColumnNumber>3</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_28f4502b8ba844388386f3c34e9271da")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_28f4502b8ba844388386f3c34e9271da")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_28f4502b8ba844388386f3c34e9271da.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_28f4502b8ba844388386f3c34e9271da.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_28f4502b8ba844388386f3c34e9271da.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_28f4502b8ba844388386f3c34e9271da.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_28f4502b8ba844388386f3c34e9271da.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_28f4502b8ba844388386f3c34e9271da.dll">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
KBcAAAoXby4AAAreACoAAAEcAAACAC0AZZIACgAAAAAAAAAAnp4ADy4AAAEeAigyAAAKKgAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAGAUAACN+AACE
BQAAAAgAACNTdHJpbmdzAAAAAIQNAAD4AgAAI1VTAHwQAAAQAAAAI0dVSUQAAACMEAAAEAIAACNC
bG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAAAQAAADAAAAAFAAAACAAAAAsAAAAHAAAAMgAA
AAIAAAAPAAAAAwAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoA
CgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsBEgA8AiYCEgBPAiYCBgDYAr4CBgADA/ECBgAa
A/ECBgA3A/ECBgBWA/ECBgBvA/ECBgCIA/ECBgCjA/ECBgC+A/ECBgDXA/ECBgAQBPADBgAwBPAD
BgBhBE4EBgB+BLoABgCDBLoABgCnBPECCgDTBL0ECgDsBL0EBgABBfADDgAjBRQBEgBFBRoCDgBN
BRQBFgCmBYYFFgDCBYYFEgACBu8FEgAMBhoCEgAoBiYCEgBJBu8FEgBaBhoCEgB5BhoCBgCnBpQG
EgDNBhoCEgDXBhoCEgDyBhoCBgD6BroABgAUB7oABgA+B7oABgBhB7oAEgBrByYCEgCRByYCAAAA
AAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQAfwANAAQACAADAQAA
owAAABEABgAMABEAfwETABEArAEXABEA9gE5AAEASgJHAAEAWgJLAAYGewJdAFaAgwJgAFaAiwJg
AFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEA
oCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYHAWfAAIAvCAAAAAAhgBfAhsAAgDY
IwAAAACBAGQCTwACAHQkAAAAAIEAcgJVAAQATCUAAAAAhhi8ARsACAAAAAEAkwIAAAEAmQIAAAIA
owIAAAEAmQIAAAIAqgIAAAMAsgIAAAQAuwJJALwBbgBRALwBbgBZALwBbgBhALwBbgBpALwBbgBx
ALwBbgB5ALwBbgCBALwBbgCJALwBbgCRALwBbgCZALwBcwChALwBGwCpALwBGwAJALwBGwCxAJUE
eACxALAEfwApALwBhADJALwBkADZALwBGwARALwBGwDhALwBGwDpALwBGwAZAF8FowDxALIFqAD5
ANQFrQABAd0FtABBALwBuQAJARgGwAAZAbwBGwAZATcGxwAhAVUGzQDpAG4G0wAxAbMG2QA5AcEG
3wBBAekG4wBZAQMH6QBZAQsH7wApAdQF9ABJAdQF+wBRAdQFAgEJAAsHBwFhARsHCwFhAScHCwE5
ATUHEQFpAUoHGwDxAFIHcwBBAIIHPgF5AZ4HRAEJAasHTAEZALwBGwAIABwAZAAIACAAaQApAJMA
lgAuABsAyAEuACMAyAEuAGMA7gEuAAsAVwEuABMAnwEuADMAnwEuACsAyAEuADsAzgEuAEMAyAEu
AFsA5QFDAGsAaQBJAJMAlgBhAJsAaQCDAKsAaQCLABUBUAECAAEAAwADAAAAbwEvAAAA7gE0AAAA
EgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAYRtZegAAAAAAAH8AAAAEAAAAAAAA
AAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAAEAAAA
AAAAAAAAAAABABoCAAAAAAsAAAAAAAAAAAAAAAoAZwUAAAAAAAAAAAEAAAC7BwAABQAEAAAAAAAA
PE1vZHVsZT4AU1RfMjhmNDUwMmI4YmE4NDQzODgzODZmM2MzNGU5MjcxZGEuZGxsAFJlc291cmNl
cwBTVF8yOGY0NTAyYjhiYTg0NDM4ODM4NmYzYzM0ZTkyNzFkYS5Qcm9wZXJ0aWVzAFNldHRpbmdz
AFNjcmlwdE1haW4AU1RfMjhmNDUwMmI4YmE4NDQzODgzODZmM2MzNGU5MjcxZGEAU2NyaXB0UmVz
dWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3Rh
bmNlAGdldF9EZWZhdWx0AERlZmF1bHQAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuU3FsQ2xpZW50
AFNxbENvbm5lY3Rpb24AY29ubgBTcWxDb21tYW5kAGNvbW0ATWFpbgBzZXRpbnNwZWN0aW9uAHNl
bmRtYWlsAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAHZlaGljbGVJRABzdGF0dXMAU3Vi
amVjdABmdWxsbmFtZQBUbwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0
dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJs
eQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0
b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAERhdGFTZXQAU2NyaXB0T2JqZWN0
TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlv
bk1hbmFnZXIAZ2V0X0l0ZW0AQWNxdWlyZUNvbm5lY3Rpb24AU3lzdGVtLkRhdGEuQ29tbW9uAERi
Q29tbWFuZABDb21tYW5kVHlwZQBzZXRfQ29tbWFuZFR5cGUAU3FsRGF0YUFkYXB0ZXIAc2V0X1Nl
bGVjdENvbW1hbmQARGF0YUFkYXB0ZXIARmlsbABEYXRhVGFibGVDb2xsZWN0aW9uAGdldF9UYWJs
ZXMASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJh
dG9yAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQARGF0YVRhYmxlAERhdGFSb3dDb2xsZWN0aW9u
AGdldF9Sb3dzAERhdGFSb3cARGF0ZVRpbWUAZ2V0X05vdwBUb1N0cmluZwBTdHJpbmcAb3BfRXF1
YWxpdHkAb3BfSW5lcXVhbGl0eQBNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAHNldF9UYXNr
UmVzdWx0AEV4Y2VwdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAGdldF9QYXJhbWV0ZXJzAFNx
bFBhcmFtZXRlcgBBZGRXaXRoVmFsdWUARXhlY3V0ZU5vblF1ZXJ5AFNUXzI4ZjQ1MDJiOGJhODQ0
Mzg4Mzg2ZjNjMzRlOTI3MWRhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxUwBU
AF8AMgA4AGYANAA1ADAAMgBiADgAYgBhADgANAA0ADMAOAA4ADMAOAA2AGYAMwBjADMANABlADkA
MgA3ADEAZABhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAATQwBv
AG4AbgBlAGMAdABvAHIAAClzAHAAXwB3AGUAZQBrAGwAeQBfAGkAbgBzAHAAZQBjAHQAaQBvAG4A
AAlkAGQAZABkAAAVaQBuAHMAcABTAHQAYQB0AHUAcwAADU0AbwBuAGQAYQB5AAANUwB1AG4AZABh
AHkAAAdBAEwATAAAH0kAbgBzAHAAZQBjAHQAaQBvAG4AIABEAHUAZQA0AAATVgBlAGgAaQBjAGwA
ZQBJAEQAABdkAGkAcwBwAGwAYQB5AE4AYQBtAGUAAEtqAG8AaABhAG4AbgBlAHMAdABAAGoAZABn
AC4AYwBvAC4AegBhADsAdwBhAHkAbgBlAGIAZQBAAGoAZABnAC4AYwBvAC4AegBhAAAlQwBhAHIA
IABJAG4AcwBwAGUAYwB0AGkAbwBuACAARAB1AGUAABFTAGEAdAB1AHIAZABhAHkAABFDAG8AbQBw
AGwAZQB0AGUAACNJAG4AcwBwAGUAYwB0AGkAbwBuACAATQBpAHMAcwBlAGQAACtDAGEAcgAgAEkA
bgBzAHAAZQBjAHQAaQBvAG4AIABNAGkAcwBzAGUAZAAAMXMAcABfAHcAZQBlAGsAbAB5AF8AaQBu
AHMAcABlAGMAdABpAG8AbgBfAHMAZQB0AAAPQABTAHQAYQB0AHUAcwAAFUAAdgBlAGgAaQBjAGwA
ZQBJAEQAADFzAHAAXwBtAGEAaQBsAF8AdwBlAGUAawBsAHkAaQBuAHMAcABlAGMAdABpAG8AbgAA
DUAAVQBzAGUAcgAyAAATQABGAHUAbABsAE4AYQBtAGUAABVAAFIAZQBnAE4AdQBtAGIAZQByAAAN
QABTAHUAYgBqADIAAABdl+cSEJGkS4VU0V/e1g+YAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZ
AyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwDBhIdAwYSIQUgAgEO
DgcgBAEODg4OAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElkRXQQgABJhBiACAQ4SYQQH
ARIVBSABARFpCAEAAgAAAAAAAwAAAQQgABJ5BCAAEn0GIAESgIEcBCABHBwGIAIBDhIdBiABARGA
iQUgAQESIQUgAQgSdQUgABKAlQUgABKAnQMgABwFIAASgKUFAAARgK0EIAEODgYgARKAoQgGIAES
gKkIBCABHA4DIAAOBQACAg4OAyAAAigHFRJ1Eh0SIRKAjRKAoQgODg4ODg4ODg4OEoCdEoCdEYCt
EoC1EoC1BSAAEoC9ByACEoDBDhwDIAAIBgcCEh0SIUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF8yOGY0
NTAyYjhiYTg0NDM4ODM4NmYzYzM0ZTkyNzFkYQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE5
AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAA1DgAAAAAAAAAAAAA
7jgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOA4AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAWXphGwAAAQBZemEbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADIA
OABmADQANQAwADIAYgA4AGIAYQA4ADQANAAzADgAOAAzADgANgBmADMAYwAzADQAZQA5ADIANwAx
AGQAYQAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADAAMAA5AC4A
MwAxADMAMgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADIAOABm
ADQANQAwADIAYgA4AGIAYQA4ADQANAAzADgAOAAzADgANgBmADMAYwAzADQAZQA5ADIANwAxAGQA
YQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA5AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADIAOABmADQANQAwADIAYgA4AGIAYQA4ADQANAAzADgAOAAzADgANgBm
ADMAYwAzADQAZQA5ADIANwAxAGQAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAyADgAZgA0ADUAMAAyAGIAOABiAGEAOAA0ADQAMwA4ADgAMwA4ADYAZgAz
AGMAMwA0AGUAOQAyADcAMQBkAGEAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcAMAAwADkALgAzADEAMwAyADEAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMAAwADkALgAzADEAMwAyADEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAADkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="100"
                Column="3" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130,44"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="144,28" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="416,233"
          Size="416,276"
          Id="Package\Foreach Loop Container"
          TopLeft="91,94" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>